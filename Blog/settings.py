"""
Django settings for Blog project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =  'w6$5!mb3veysj6u^l_bl$1zzug4f49^su8l5*j)v^*hu!5$sit' # os.environ.get("SECRET_KEY") # 'w6$5!mb3veysj6u^l_bl$1zzug4f49^su8l5*j)v^*hu!5$sit'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False # bool(os.environ.get("DEBUG", 0))  #True

ALLOWED_HOSTS = ['demoblogapp.azurewebsites.net','127.0.0.1','localhost', '*']    #demoblogapp.azurewebsites.net
# ALLOWED_HOSTS.extend(
#     filter(None, os.environ.get("ALLOWED_HOSTS",'').split(","))
# )

# Application definition

INSTALLED_APPS = [
    # Custom App
    'BlogApp',
    'Post',
    'User',
    'shops',
    'API',
    # Django App
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# AUTH_USER_MODEL = 'User.User'
WSGI_APPLICATION = 'Blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {

    # 'default': {
    #         'ENGINE': 'django.db.backends.postgresql',
    #         'HOST': os.environ.get('DB_HOST'),
    #         'NAME': os.environ.get('DB_NAME'),
    #         'USER': os.environ.get('DB_USER'),
    #         'PASSWORD': os.environ.get('DB_PASS'),
    #     }
    'default': {
         'ENGINE': 'django.db.backends.sqlite3',
         'NAME': BASE_DIR / 'db.sqlite3',
     }

    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'blogsite',
    #     'USER': 'root',
    #     'PASSWORD': 'iTech1234',
    #     'HOST': 'localhost',
    #     'PORT': '3306',
    # }
    # Admin user- vijay200797@gmail.com  Password = admin
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'media')
]
STATIC_URL = '/static/'
MEDIA_URL = '//'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_cdn')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media_cdn')
